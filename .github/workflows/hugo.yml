name: Deploy to Github Pages

on:
    schedule:
      - cron: '15 */3 * * *'   # at minute 0, every 2 hours (UTC)
    push:
        branches: [main]
    pull_request:
        branches: [main]
    workflow_run:
      workflows: [
        "Updates (Daily Refresh)",
        "Publish due posts"
      ]  # must match the other workflow's name(s) exactly
      types: [completed]
jobs:
  build:
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-24.04-arm # ubuntu-latest
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Cache Hugo resources
        uses: actions/cache@v4
        env:
          cache-name: cache-hugo-resources
        with:
          path: resources
          key: ${{ env.cache-name }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "^1.23.3"
      - name: Check Go version
        run: go version

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      # - name: Install PowerShell
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y wget apt-transport-https software-properties-common
      #     wget -q "https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb"
      #     sudo dpkg -i packages-microsoft-prod.deb
      #     sudo apt-get update
      #     sudo apt-get install -y powershell
      #     $PSVersionTable

      - name: Install npm dependencies
        run: |
          $PSVersionTable
          npm install
        shell: pwsh

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: "0.148.2"
          extended: true

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore
        run: dotnet restore src/Crawler/Crawler.csproj

      - name: Build
        run: dotnet build src/Crawler/Crawler.csproj -c Release --no-restore

      - name: Run crawler (bin output)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODELS_TOKEN: ${{ secrets.MODELS_TOKEN }}
          FOUNDRY_API_KEY: ${{ secrets.FOUNDRY_API_KEY }}
        run: |
          OUTDIR=$(ls -d src/Crawler/bin/Release/net9.0/ | head -n 1)
          echo "Output directory: $OUTDIR"
          mkdir -p "$OUTDIR"
          # cp -f appsettings.json "$OUTDIR"/appsettings.json
          dotnet run --project src/Crawler/Crawler.csproj -c Release --no-build
          # Copy results from output back to repo
          mkdir -p data state content
          cp -r "$OUTDIR"/data/. data/ 2>/dev/null || true
          cp -r "$OUTDIR"/state/. state/ 2>/dev/null || true
          # cp -r "$OUTDIR"/content/. content/ 2>/dev/null || true

      - name: Build Update pages
        run: node scripts/sync-updates-from-jsonl.js

      - name: Build
        if: failure() || success()
        run: hugo --minify --gc --environment production

      - name: Commit & push results
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Ensure we're up to date before committing (avoid non-ff push)
          git fetch origin main
          git pull --rebase --autostash origin main || true

          git add data/ content/ state/
          if git diff --staged --quiet; then
            echo "No changes."
            exit 0
          fi

          git commit -m "chore: update crawl outputs [skip ci]"

          # Try a normal push first; if rejected, rebase and retry; finally force-with-lease as last resort
          if git push; then
            echo "Pushed successfully."
          else
            echo "Push rejected, attempting rebase and retry..."
            git fetch origin main
            if git rebase origin/main; then
              git push || git push --force-with-lease
            else
              echo "Rebase had conflicts; aborting and using --force-with-lease to publish bot outputs."
              git rebase --abort || true
              git push --force-with-lease
            fi
          fi
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: public
          clean: true
          single-commit: true
