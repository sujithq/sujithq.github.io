name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.101'

      - name: Create sample failing solution (separate src/tests)
        run: |
          mkdir -p src tests
          dotnet new console --framework net9.0 --output src/SampleApp --name SampleApp
          # simple program
          cat > src/SampleApp/Program.cs <<'CS'
          Console.WriteLine("Hello from failing build test");
          CS

          dotnet new xunit --framework net9.0 --output tests/SampleApp.Tests --name SampleApp.Tests
          # guaranteed failing test
          cat > tests/SampleApp.Tests/UnitTest1.cs <<'CS'
          using Xunit;

          namespace SampleApp.Tests;

          public class UnitTest1
          {
              [Fact]
              public void ThisTestAlwaysFails()
              {
                  Assert.Equal(1, 2);
              }
          }
          CS

          # solution + project reference
          dotnet new sln -n SampleSolution
          dotnet sln SampleSolution.sln add src/SampleApp/SampleApp.csproj
          dotnet sln SampleSolution.sln add tests/SampleApp.Tests/SampleApp.Tests.csproj
          dotnet add tests/SampleApp.Tests/SampleApp.Tests.csproj reference src/SampleApp/SampleApp.csproj

      - name: Verify layout
        run: |
          ls -R
          echo "---- Solution projects ----"
          grep -E '^Project\(' SampleSolution.sln

      - name: Restore
        run: dotnet restore SampleSolution.sln

      - name: Build
        run: dotnet build SampleSolution.sln --configuration Release --no-restore

      - name: Test (xUnit)
        id: tests
        continue-on-error: true
        run: |
          mkdir -p TestResults
          dotnet test SampleSolution.sln --no-build --configuration Release \
            --logger "trx;LogFileName=testresults.trx" \
            --results-directory TestResults

      - name: Upload test results artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: TestResults/**/*.trx

      - name: Fail job if tests failed
        if: ${{ steps.tests.outcome == 'failure' }}
        run: exit 1
