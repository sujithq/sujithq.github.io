[{"authors":["sujith"],"categories":null,"content":"Sujith brings more then 22 years of IT experience, combined with excellent communication and presentation skills. He is an efficient, analytical, positive thinking professional who has successfully demonstrated the ability of understanding business requirements, specifying systems, developing working software and designing Azure solutions.\nAs a certified Azure Solutions Architect he demonstrates skills and knowledge to advise stakeholders and translate business requirements into secure, scalable, and reliable solutions. He has advanced experience and knowledge across various aspects of IT operations, including networking, virtualization, identity, security, business continuity, disaster recovery, data management, budgeting, and governance. He also understands how managing decisions in each area affect an overall solution.\nAs a certified DevOps Engineer he demonstrates the ability to combine people, process, and technologies to continuously deliver valuable products and services that meet end user needs and business objectives. DevOps professionals streamline delivery by optimizing practices, improving communications and collaboration, and creating automation.\nAs a certified Azure Cosmos DB Developer he shows subject matter expertise designing, implementing, and monitoring cloud-native applications that store and manage data. His responsibilities include designing and implementing data models and data distribution, loading data into an Azure Cosmos DB database, and optimizing and maintaining the solution. This professional integrates the solution with other Azure services. He also designs, implements, and monitors solutions that consider security, availability, resilience, and performance requirements. He has solid knowledge and experience developing apps for Azure and working with Azure Cosmos DB database technologies. He should be proficient at developing applications by using the Core (SQL) API and SDKs, writing efficient queries and creating appropriate index policies, provisioning and managing resources in Azure, and creating server-side objects with JavaScript. He should be able to interpret JSON, read C# or Java code, and use PowerShell.\nAs a certified Azure AI Engineer Associate he validates the skills and knowledge to use Cognitive Services, Machine Learning, and Knowledge Mining to architect and implement Microsoft AI solutions involving natural language processing, speech, computer vision, bots, and agents.\nAs a certfified Azure Administrator certification he validates the skills and knowledge to implement, manage, and monitor an organizationâ€™s Microsoft Azure environment. Candidates have a deep understanding of each implementing, managing, and monitoring identity, governance, storage, compute, and virtual networks in a cloud environment, plus provision, size, monitor, and adjust resources, when needed.\nAs a certified Azure Security Engineer he demonstrates the skills and knowledge to implement security controls and threat protection, manage identity and access, and protect data, applications, and networks in cloud and hybrid environments as part of end-to-end infrastructure.\nAs a certified Azure Developer he demonstrates the skills and knowledge to design, build, test, and maintain cloud applications and services on Microsoft Azure. Candidates participate in all phases of cloud development from requirements definition and design, to development, deployment, and maintenance.\nAs lead developer, he has carried the full weight of software development in medium-sized software firms in the past few years. As such he is guiding other developers, streamlining development, defining standards, organizing code reviews, exploring new technologies, etc. Having worked on the same products for several years, he has developed a deeper understanding of the evolution of software.\nHe is an excellent team player, capable of working under pressure and without supervision. He is well organized, self-motivated, and has demonstrated important skills in dealing with issues and resolving them prior to becoming problems. He is an easy learning person used to acquire new knowledge about customer systems, standards, tools and trends. He is eager to learn new technologies and is continuously extending his knowledge.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1651227972,"objectID":"791ce964fc93756b99412afd74939435","permalink":"/authors/sujith/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/sujith/","section":"authors","summary":"Sujith brings more then 22 years of IT experience, combined with excellent communication and presentation skills. He is an efficient, analytical, positive thinking professional who has successfully demonstrated the ability of understanding business requirements, specifying systems, developing working software and designing Azure solutions.\nAs a certified Azure Solutions Architect he demonstrates skills and knowledge to advise stakeholders and translate business requirements into secure, scalable, and reliable solutions. He has advanced experience and knowledge across various aspects of IT operations, including networking, virtualization, identity, security, business continuity, disaster recovery, data management, budgeting, and governance.","tags":null,"title":"Sujith Quintelier","type":"authors"},{"authors":["Sujith Quintelier"],"categories":["Azure","az-700","networking"],"content":" Work in progress\n This blog post summarizes my notes on my course on az-700: the course teaches Network Engineers how to design, implement, and maintain Azure networking solutions. The course covers the process of designing, implementing, and managing core Azure networking infrastructure, Hybrid Networking connections, load balancing traffic, network routing, private access to Azure services, network security and monitoring.\nVirtual Networks Capabilities  Communication with the internet Communication between Azure resources Communication between on-premises resources Filtering network traffic Routing network traffic  Address spaces to be used  10.0.0.0 - 10.255.255.255 (10/8 prefix) 172.16.0.0 - 172.31.255.255 (172.16/12 prefix) 192.168.0.0 - 192.168.255.255 (192.168/16 prefix)  Subnets Azure reserves 5 IP addresses within each subnet.\n x.x.x.0: Network address x.x.x.1: Reserved by Azure for the default gateway x.x.x.2, x.x.x.3: Reserved by Azure to map the Azure DNS IPs to the VNet space x.x.x.255: Network broadcast address  Scopes All Azure resource types have a scope that defines the level that resource names must be unique. A resource must have a unique name within its scope. There are four levels you can specify a scope:\n Global (Azure Storage Account) Management Group Subscription Resource Group (Azure Virtual Network) Resource  Regions and Subscriptions A resource can be created in a virtual network in the same region and subscription but virtual network can be connected from different subscriptions and regions\nAvailability Zones An Azure Availability Zone enables you to define unique physical locations within a region. Each zone is made up of one or more data centers equipped with independent power, cooling, and networking. Designed to ensure high-availability of your Azure services, the physical separation of Availability Zones within a region protects applications and data from data center failures.\n Zonal services: Resources can be pinned to a specific zone Zone-Redundant services: Resources are replicated across zones automatically Non-Regional services: services are always available and are resilient to zone-wide and region-wide outages.  Public IP Public IP addresses enable Internet resources to communicate with Azure resources and enable Azure resources to communicate outbound with Internet and public-facing Azure services. A public IP address in Azure is dedicated to a specific resource, until it\u0026rsquo;s unassigned by a network engineer. A resource without a public IP assigned can communicate outbound through network address translation services, where Azure dynamically assigns an available IP address that isn\u0026rsquo;t dedicated to the resource.\n  A dynamic public IP address is an assigned address that can change over the lifespan of the Azure resource. The dynamic IP address is allocated when you create or start a VM. The IP address is released when you stop or delete the VM. In each Azure region, public IP addresses are assigned from a unique pool of addresses. The default allocation method is dynamic. A static public IP address is an assigned address that will not change over the lifespan of the Azure resource. To ensure that the IP address for the resource remains the same, set the allocation method explicitly to static. In this case, an IP address is assigned immediately. It is released only when you delete the resource or change the IP allocation method to dynamic.     Basic SKU: can be assigned by using static or dynamic allocation methods, are open by default, use of NSG is recommended but optional for restricting inbound or outbound traffic. Assignable to to any Azure resource that can be assigned a public IP address, such as network interfaces, VPN gateways, application gateways, and internet-facing load balancers. Availability zone scenarios not supported Standard SKU: always use the static allocation method, are secure by default and closed to inbound traffic, must explicitly allow inbound traffic by using a NSG. Assignable to network interfaces, Standard public load balancers, application gateways, or VPN gateways. Zone-redundant by default and optionally zonal (they can be created zonal and guaranteed in a specific availability zone).   DNS resolutions Depending on how you use Azure to host IaaS, PaaS, and hybrid solutions, you might need to allow the virtual machines (VMs), and other resources deployed in a virtual network to communicate with each other. Although you can enable communication by using IP addresses, it is much simpler to use names that can be easily remembered, and do not change.\nDNS is split into two areas: Public, and Private DNS for resources accessible from your own internal networks.\nPublic DNS Services Public DNS services resolve names and IP addresses for resources and services accessible over the internet such as web servers. Azure DNS is a hosting service for DNS domain that provides name resolution by using Microsoft Azure infrastructure. DNS domains in Azure DNS are hosted on Azure\u0026rsquo;s global network of DNS name servers. Azure DNS uses anycast networking. Each DNS query is answered by the closest available DNS server to provide fast performance and high availability for your domain.\nIn Azure DNS, you can create address records manually within relevant zones. The records most frequently used will be:\n Host records: A/AAAA (IPv4/IPv6) Alias records: CNAME  Azure DNS provides a reliable, secure DNS service to manage and resolve domain names in a virtual network without needing to add a custom DNS solution.\nA DNS zone hosts the DNS records for a domain. So, to start hosting your domain in Azure DNS, you need to create a DNS zone for that domain name. Each DNS record for your domain is then created inside this DNS zone.\nYou do not have to own a domain name to create a DNS zone with that domain name in Azure DNS. However, you do need to own the domain to configure the domain.\nDelegate DNS Domains To delegate your domain to Azure DNS, you first need to know the name server names for your zone. Each time a DNS zone is created Azure DNS allocates name servers from a pool. Once the Name Servers are assigned, Azure DNS automatically creates authoritative NS records in your zone.\nOnce the DNS zone is created, and you have the name servers, you need to update the parent domain. Each registrar has their own DNS management tools to change the name server records for a domain. In the registrarâ€™s DNS management page, edit the NS records and replace the NS records with the ones Azure DNS created.\nNote: When delegating a domain to Azure DNS, you must use the name server names provided by Azure DNS. You should always use all four name server names, regardless of the name of your domain.\nPrivate DNS Services Private DNS services resolve names and IP addresses for resources and services\nWhen resources deployed in virtual networks need to resolve domain names to internal IP addresses, they can use one the three methods:\n Azure DNS Private Zones Azure-provided name resolution Name resolution that uses your own DNS server  The type of name resolution you use depends on how your resources need to communicate with each other.\nYour name resolution needs might go beyond the features provided by Azure. For example, you might need to use Microsoft Windows Server Active Directory domains, resolve DNS names between virtual networks. To cover these scenarios, Azure provides the ability for you to use your own DNS servers.\nDNS servers within a virtual network can forward DNS queries to the recursive resolvers in Azure. This enables you to resolve host names within that virtual network. For example, a domain controller (DC) running in Azure can respond to DNS queries for its domains and forward all other queries to Azure. Forwarding queries allows VMs to see both your on-premises resources (via the DC) and Azure-provided host names (via the forwarder). Access to the recursive resolvers in Azure is provided via the virtual IP 168.63.129.16.\nDNS forwarding also enables DNS resolution between virtual networks and allows your on-premises machines to resolve Azure-provided host names. In order to resolve a VM\u0026rsquo;s host name, the DNS server VM must reside in the same virtual network and be configured to forward host name queries to Azure. Because the DNS suffix is different in each virtual network, you can use conditional forwarding rules to send DNS queries to the correct virtual network for resolution.\nCross-virtual network connectivity with peering Organizations with large scale operations will often need to create connections between different parts of their virtual network infrastructure. Virtual network peering enables you to seamlessly connect separate VNets with optimal network performance, whether they are in the same Azure region (VNet peering) or in different regions (Global VNet peering). Network traffic between peered virtual networks is private. The virtual networks appear as one for connectivity purposes. The traffic between virtual machines in peered virtual networks uses the Microsoft backbone infrastructure, and no public Internet, gateways, or encryption is required in the communication between the virtual networks.\nVirtual network peering enables you to seamlessly connect two Azure virtual networks. Once peered, the virtual networks appear as one, for connectivity purposes. There are two types of VNet peering.\n Regional peering connects Azure virtual networks in the same region. Global peering connects Azure virtual networks in different regions. When creating a global peering, the peered virtual networks can exist in any Azure public cloud region or China cloud regions, but not in Government cloud regions. You can only peer virtual networks in the same region in Azure Government cloud regions.  ","date":1654236000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1654248625,"objectID":"10b0f03be05ac9723fdcd781188e95fc","permalink":"/post/az-700-prep/","publishdate":"2022-06-03T06:00:00Z","relpermalink":"/post/az-700-prep/","section":"post","summary":"AZ-700 Prep Highlights","tags":["Azure","az-700","networking","VNET","Availability Zones","Public IP","Azure DNS","Azure Private DNS"],"title":"AZ-700 Prep Highlights","type":"post"},{"authors":["Sujith Quintelier"],"categories":["Development"],"content":"Sometimes when you run a script, you get this this error like set: Illegal option -:\nRun\nsh filename\rError\n: not found: 2:\r: not found: 4:\rfilename: 6: set: Illegal option -\rThis means there is something wrong with the line endings in your script. This can easily be resolved by running this:\nRun\nsed -i \u0026#39;s/\\r$//\u0026#39; filename\rAfter that rerun your script.\n","date":1651226400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651230851,"objectID":"aa9183d555bc78a9c47ec104d799c5f1","permalink":"/post/wsl-illegal-option/","publishdate":"2022-04-29T10:00:00Z","relpermalink":"/post/wsl-illegal-option/","section":"post","summary":"Illegal option when executing a script","tags":["WSL"],"title":"Illegal option when executing a script","type":"post"},{"authors":["Sujith Quintelier"],"categories":["Development"],"content":"When you are using WSL, once in a while you get this message at start up stating your environment is out of date:\nWelcome to Ubuntu 20.04.4 LTS (GNU/Linux 5.10.102.1-microsoft-standard-WSL2 x86_64)\r* Documentation: https://help.ubuntu.com\r* Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage\rSystem information as of Thu Apr 28 08:26:12 CEST 2022\rSystem load: 0.0 Processes: 8\rUsage of /: 11.0% of 250.98GB Users logged in: 0\rMemory usage: 1% IPv4 address for eth0: 172.31.68.164\rSwap usage: 0%\r0 updates can be applied immediately.\rThe list of available updates is more than a week old.\rTo check for new updates run: sudo apt update\rThis message is shown once a day. To disable it please create the\r/home/\u0026lt;username\u0026gt;/.hushlogin file.\rYou could run this set of commands or this one line to update your WSL\nSet\nsudo apt-get update -y\rsudo apt-get upgrade -y\rsudo apt-get autoremove -y\rsudo apt-get clean -y\rOne line\nsudo apt-get update -y \u0026amp;\u0026amp; sudo apt-get upgrade -y \u0026amp;\u0026amp; sudo apt-get autoremove -y \u0026amp;\u0026amp; sudo apt-get clean -y\rYou can actually create a script wsl-update.sh in the user\u0026rsquo;s root folder and just execute it using sh ~/wsl-update.sh\nUse this script to create wsl-update.sh and make it executable.\ncat \u0026lt;\u0026lt;EOT \u0026gt;\u0026gt; ~/wsl-update.sh\r#!/bin/sh\rsudo apt-get update -y \u0026amp;\u0026amp; sudo apt-get upgrade -y \u0026amp;\u0026amp; sudo apt-get autoremove -y \u0026amp;\u0026amp; sudo apt-get clean -y\rEOT\rchmod +X ~/wsl-update.sh\r","date":1651222800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651230555,"objectID":"a384012cfba56d60e4583cd86a66ccdd","permalink":"/post/wsl-update/","publishdate":"2022-04-29T09:00:00Z","relpermalink":"/post/wsl-update/","section":"post","summary":"Update, Upgrade and Clean WSL","tags":["WSL"],"title":"Update, Upgrade and Clean WSL","type":"post"},{"authors":["Sujith Quintelier"],"categories":["General"],"content":"It has been a while since my last post but I am working on new content. In the beginning it will be just some short notes about things happened in the past week.\n","date":1651136400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651230555,"objectID":"9a4ba3deaa9971b4104b393b99311b7f","permalink":"/post/update/","publishdate":"2022-04-28T09:00:00Z","relpermalink":"/post/update/","section":"post","summary":"Update post","tags":["blog"],"title":"Update post","type":"post"},{"authors":["Sujith Quintelier"],"categories":["Development"],"content":"This guide helps you set up your Blazor development environment without messing up your current development machine with beta releases.\nWe will use these tools\n  Docker Community Edition\n  Visual Studio Code\n  Let\u0026rsquo;s get started Create a local directory with one subdirectory named \u0026ldquo;app\u0026rdquo;.\nCreate Dockerfile First download the latest dockerfile version. Look at the latest version of Linux amd64. Copy the raw content and store it in a file Dockerfile. Modify it by appending  \\ and \u0026amp;\u0026amp; dotnet new -i Microsoft.AspNetCore.Blazor.Templates at the second RUN command.\nIt should look like this:\nRUN curl -SL --output dotnet.tar.gz https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-x64.tar.gz \\\r \u0026amp;\u0026amp; dotnet_sha512=\u0026#39;2166986e360f1c3456a33723edb80349e6ede115be04a6331bfbfd0f412494684d174a0cfb21d2feb00d509ce342030160a4b5b445e393ad83bedb613a64bc66\u0026#39; \\\r \u0026amp;\u0026amp; sha512sum dotnet.tar.gz \\\r \u0026amp;\u0026amp; echo \u0026#34;$dotnet_sha512dotnet.tar.gz\u0026#34; | sha512sum -c - \\\r \u0026amp;\u0026amp; mkdir -p /usr/share/dotnet \\\r \u0026amp;\u0026amp; tar -zxf dotnet.tar.gz -C /usr/share/dotnet \\\r \u0026amp;\u0026amp; rm dotnet.tar.gz \\\r \u0026amp;\u0026amp; ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet \\\r \u0026amp;\u0026amp; dotnet new -i Microsoft.AspNetCore.Blazor.Templates\rCreate the docker image Open a terminal and go to the location of the Dockerfile and run docker build -t blazor:latest .. This will build the docker image.\nIf this fails, just restart your docker and rerun previous command.\nbuild This builds the image.\n-t This adds a label latest.\nverify The creation of the image can be verified by docker images You should see 2 images. Base image and the one you just created.\nStart a container instance At the prompt run docker run -it --rm --name blazortest -p 8000:80 -v H:\\Euricom\\Blazor\\app\\:/app -w=\u0026quot;/app\u0026quot; blazor:latest\nrun This runs the container:\n-it This runs an interactive container.\n\u0026ndash;rm This removes the container after stopping the container.\n-p This maps the internal port (80) to an external port (8000).\n-v This maps a local path H:\\Euricom\\Blazor\\app\\ to this volume /app\n-w This sets the working directory to /app\nverify In another terminal you should see named instance blazortest\nCreate a new blazor project You can create a new Blazor project the volume created earlier by running this command dotnet new blazor.\nOpen the project file app.csproj and add this node \u0026lt;Watch Include=\u0026quot;**\\*.cshtml\u0026quot; /\u0026gt;. This makes it possible to make changes on the fly.\n\u0026lt;Project Sdk=\u0026#34;Microsoft.NET.Sdk.Web\u0026#34;\u0026gt;\r\u0026lt;PropertyGroup\u0026gt;\r\u0026lt;TargetFramework\u0026gt;netstandard2.0\u0026lt;/TargetFramework\u0026gt;\r\u0026lt;RunCommand\u0026gt;dotnet\u0026lt;/RunCommand\u0026gt;\r\u0026lt;RunArguments\u0026gt;blazor serve\u0026lt;/RunArguments\u0026gt;\r\u0026lt;LangVersion\u0026gt;7.3\u0026lt;/LangVersion\u0026gt;\r\u0026lt;/PropertyGroup\u0026gt;\r\u0026lt;ItemGroup\u0026gt;\r\u0026lt;PackageReference Include=\u0026#34;Microsoft.AspNetCore.Blazor.Browser\u0026#34; Version=\u0026#34;0.4.0\u0026#34; /\u0026gt;\r\u0026lt;PackageReference Include=\u0026#34;Microsoft.AspNetCore.Blazor.Build\u0026#34; Version=\u0026#34;0.4.0\u0026#34; /\u0026gt;\r\u0026lt;DotNetCliToolReference Include=\u0026#34;Microsoft.AspNetCore.Blazor.Cli\u0026#34; Version=\u0026#34;0.4.0\u0026#34; /\u0026gt;\r\u0026lt;Watch Include=\u0026#34;**\\*.cshtml\u0026#34; /\u0026gt;\r\u0026lt;/ItemGroup\u0026gt;\r\u0026lt;/Project\u0026gt;\rStart the application Start the application via dotnet watch run\nLaunch the application Open a browser and launch http://localhost:8000\n","date":1531389600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651227972,"objectID":"dea9e43fb42193f2fe41bd93650a3bb1","permalink":"/post/setupblazordevenv/","publishdate":"2018-07-12T10:00:00Z","relpermalink":"/post/setupblazordevenv/","section":"post","summary":"Setup Blazor development environment","tags":["Blazor","Docker"],"title":"Setup Blazor development environment","type":"post"},{"authors":["Sujith Quintelier"],"categories":["Development"],"content":"Following this note you will be able to Create, Build and Deploy a simple Azure Function App. You create it in Visual Studio. Let it build with Teamcity and deploy it with Octopus Deploy. The needed Azure Resources will also be deployed.\nSetup Tools  Visual Studio 2017 v15.7.4 (VS). TeamCity v2017.2.4 (TC). Octopus Deploy v2018.6.2 (OD).  For this purpose I deployed a Azure VM using this [template] (https://portal.azure.com/#create/octopus.octopusdeployoctopus-deploy), installed an OD Tentacle, a TC Agent and OD cli (in C:\\Programs\\Octo). OD downloads can be found [here] (https://octopus.com/downloads). Also install the correct .NET version via this [link] (https://www.microsoft.com/web/downloads/platform.aspx) and set the DOTNET_HOME environment variable in TC to C:\\Program Files\\dotnet\\\nMake sure you have installed the Azure development workload in VS. Check via TOOLS\\Get Tools and Features\u0026hellip; On Workloads tab check Azure development\nCreate We use VS for developing the Function. Store the project in a source control system supported by TC.\nFunction Add new Project, search for Azure Functions and give it a name. It is a basic http trigger. Nothing fancy. Modify if needed.\nInstall Nuget package Microsoft.NET.Sdk.Functions.\nARM Template Deploying an Azure Function needs 3 Azure Resources:\n Storage Account (Microsoft.Storage/storageAccounts) Hosting Plan (Microsoft.Web/serverfarms) Function App (Microsoft.Web/sites)  Below you will find a basic ARM Template with these 3 resources and a parameters Template. Set Copy to Output Directory to Copy if Newer. Add those templates to your project and name them azuredeploy.json and azuredeploy.parameters.json.\nThe project structure should look like\nTemplate {\r\u0026#34;$schema\u0026#34;: \u0026#34;https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\u0026#34;,\r\u0026#34;contentVersion\u0026#34;: \u0026#34;1.0.0.0\u0026#34;,\r\u0026#34;parameters\u0026#34;: {\r\u0026#34;appName\u0026#34;: {\r\u0026#34;type\u0026#34;: \u0026#34;string\u0026#34;,\r\u0026#34;metadata\u0026#34;: {\r\u0026#34;description\u0026#34;: \u0026#34;The name of the function app that you wish to create.\u0026#34;\r}\r},\r\u0026#34;sku\u0026#34;: {\r\u0026#34;type\u0026#34;: \u0026#34;string\u0026#34;,\r\u0026#34;allowedValues\u0026#34;: [\r\u0026#34;Free\u0026#34;,\r\u0026#34;Shared\u0026#34;,\r\u0026#34;Basic\u0026#34;,\r\u0026#34;Standard\u0026#34;\r],\r\u0026#34;defaultValue\u0026#34;: \u0026#34;Standard\u0026#34;,\r\u0026#34;metadata\u0026#34;: {\r\u0026#34;description\u0026#34;: \u0026#34;The pricing tier for the hosting plan.\u0026#34;\r}\r},\r\u0026#34;workerSize\u0026#34;: {\r\u0026#34;type\u0026#34;: \u0026#34;string\u0026#34;,\r\u0026#34;allowedValues\u0026#34;: [\r\u0026#34;0\u0026#34;,\r\u0026#34;1\u0026#34;,\r\u0026#34;2\u0026#34;\r],\r\u0026#34;defaultValue\u0026#34;: \u0026#34;0\u0026#34;,\r\u0026#34;metadata\u0026#34;: {\r\u0026#34;description\u0026#34;: \u0026#34;The instance size of the hosting plan (small, medium, or large).\u0026#34;\r}\r},\r\u0026#34;storageAccountType\u0026#34;: {\r\u0026#34;type\u0026#34;: \u0026#34;string\u0026#34;,\r\u0026#34;defaultValue\u0026#34;: \u0026#34;Standard_LRS\u0026#34;,\r\u0026#34;allowedValues\u0026#34;: [\r\u0026#34;Standard_LRS\u0026#34;,\r\u0026#34;Standard_GRS\u0026#34;,\r\u0026#34;Standard_RAGRS\u0026#34;\r],\r\u0026#34;metadata\u0026#34;: {\r\u0026#34;description\u0026#34;: \u0026#34;Storage Account type\u0026#34;\r}\r},\r\u0026#34;location\u0026#34;: {\r\u0026#34;type\u0026#34;: \u0026#34;string\u0026#34;,\r\u0026#34;defaultValue\u0026#34;: \u0026#34;[resourceGroup().location]\u0026#34;,\r\u0026#34;metadata\u0026#34;: {\r\u0026#34;description\u0026#34;: \u0026#34;Location for all resources.\u0026#34;\r}\r}\r},\r\u0026#34;variables\u0026#34;: {\r\u0026#34;functionAppName\u0026#34;: \u0026#34;[parameters(\u0026#39;appName\u0026#39;)]\u0026#34;,\r\u0026#34;hostingPlanName\u0026#34;: \u0026#34;[parameters(\u0026#39;appName\u0026#39;)]\u0026#34;,\r\u0026#34;storageAccountName\u0026#34;: \u0026#34;[concat(uniquestring(resourceGroup().id), \u0026#39;functions\u0026#39;)]\u0026#34;\r},\r\u0026#34;resources\u0026#34;: [\r{\r\u0026#34;type\u0026#34;: \u0026#34;Microsoft.Storage/storageAccounts\u0026#34;,\r\u0026#34;name\u0026#34;: \u0026#34;[variables(\u0026#39;storageAccountName\u0026#39;)]\u0026#34;,\r\u0026#34;apiVersion\u0026#34;: \u0026#34;2016-12-01\u0026#34;,\r\u0026#34;location\u0026#34;: \u0026#34;[parameters(\u0026#39;location\u0026#39;)]\u0026#34;,\r\u0026#34;kind\u0026#34;: \u0026#34;Storage\u0026#34;,\r\u0026#34;sku\u0026#34;: {\r\u0026#34;name\u0026#34;: \u0026#34;[parameters(\u0026#39;storageAccountType\u0026#39;)]\u0026#34;\r}\r},\r{\r\u0026#34;type\u0026#34;: \u0026#34;Microsoft.Web/serverfarms\u0026#34;,\r\u0026#34;apiVersion\u0026#34;: \u0026#34;2015-04-01\u0026#34;,\r\u0026#34;name\u0026#34;: \u0026#34;[variables(\u0026#39;hostingPlanName\u0026#39;)]\u0026#34;,\r\u0026#34;location\u0026#34;: \u0026#34;[parameters(\u0026#39;location\u0026#39;)]\u0026#34;,\r\u0026#34;properties\u0026#34;: {\r\u0026#34;name\u0026#34;: \u0026#34;[variables(\u0026#39;hostingPlanName\u0026#39;)]\u0026#34;,\r\u0026#34;sku\u0026#34;: \u0026#34;[parameters(\u0026#39;sku\u0026#39;)]\u0026#34;,\r\u0026#34;workerSize\u0026#34;: \u0026#34;[parameters(\u0026#39;workerSize\u0026#39;)]\u0026#34;,\r\u0026#34;hostingEnvironment\u0026#34;: \u0026#34;\u0026#34;,\r\u0026#34;numberOfWorkers\u0026#34;: 1\r}\r},\r{\r\u0026#34;apiVersion\u0026#34;: \u0026#34;2015-04-01\u0026#34;,\r\u0026#34;type\u0026#34;: \u0026#34;Microsoft.Web/sites\u0026#34;,\r\u0026#34;name\u0026#34;: \u0026#34;[variables(\u0026#39;functionAppName\u0026#39;)]\u0026#34;,\r\u0026#34;location\u0026#34;: \u0026#34;[parameters(\u0026#39;location\u0026#39;)]\u0026#34;,\r\u0026#34;kind\u0026#34;: \u0026#34;functionapp\u0026#34;,\r\u0026#34;properties\u0026#34;: {\r\u0026#34;name\u0026#34;: \u0026#34;[variables(\u0026#39;functionAppName\u0026#39;)]\u0026#34;,\r\u0026#34;serverFarmId\u0026#34;: \u0026#34;[resourceId(\u0026#39;Microsoft.Web/serverfarms\u0026#39;, variables(\u0026#39;hostingPlanName\u0026#39;))]\u0026#34;,\r\u0026#34;hostingEnvironment\u0026#34;: \u0026#34;\u0026#34;,\r\u0026#34;clientAffinityEnabled\u0026#34;: false,\r\u0026#34;siteConfig\u0026#34;: {\r\u0026#34;alwaysOn\u0026#34;: true\r}\r},\r\u0026#34;dependsOn\u0026#34;: [\r\u0026#34;[resourceId(\u0026#39;Microsoft.Web/serverfarms\u0026#39;, variables(\u0026#39;hostingPlanName\u0026#39;))]\u0026#34;,\r\u0026#34;[resourceId(\u0026#39;Microsoft.Storage/storageAccounts\u0026#39;, variables(\u0026#39;storageAccountName\u0026#39;))]\u0026#34;\r],\r\u0026#34;resources\u0026#34;: [\r{\r\u0026#34;apiVersion\u0026#34;: \u0026#34;2016-03-01\u0026#34;,\r\u0026#34;name\u0026#34;: \u0026#34;appsettings\u0026#34;,\r\u0026#34;type\u0026#34;: \u0026#34;config\u0026#34;,\r\u0026#34;dependsOn\u0026#34;: [\r\u0026#34;[resourceId(\u0026#39;Microsoft.Web/sites\u0026#39;, variables(\u0026#39;functionAppName\u0026#39;))]\u0026#34;,\r\u0026#34;[resourceId(\u0026#39;Microsoft.Storage/storageAccounts\u0026#39;, variables(\u0026#39;storageAccountName\u0026#39;))]\u0026#34;\r],\r\u0026#34;properties\u0026#34;: {\r\u0026#34;AzureWebJobsStorage\u0026#34;: \u0026#34;[concat(\u0026#39;DefaultEndpointsProtocol=https;AccountName=\u0026#39;,variables(\u0026#39;storageAccountName\u0026#39;),\u0026#39;; AccountKey=\u0026#39;,listkeys(resourceId(\u0026#39;Microsoft.Storage/storageAccounts\u0026#39;, variables(\u0026#39;storageAccountName\u0026#39;)), \u0026#39;2015-05-01-preview\u0026#39;).key1,\u0026#39;;\u0026#39;)]\u0026#34;,\r\u0026#34;AzureWebJobsDashboard\u0026#34;: \u0026#34;[concat(\u0026#39;DefaultEndpointsProtocol=https;AccountName=\u0026#39;,variables(\u0026#39;storageAccountName\u0026#39;),\u0026#39;; AccountKey=\u0026#39;,listkeys(resourceId(\u0026#39;Microsoft.Storage/storageAccounts\u0026#39;, variables(\u0026#39;storageAccountName\u0026#39;)), \u0026#39;2015-05-01-preview\u0026#39;).key1,\u0026#39;;\u0026#39;)]\u0026#34;,\r\u0026#34;FUNCTIONS_EXTENSION_VERSION\u0026#34;: \u0026#34;~1\u0026#34;\r}\r}\r]\r}\r]\r}\rParameters {\r\u0026#34;$schema\u0026#34;: \u0026#34;https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#\u0026#34;,\r\u0026#34;contentVersion\u0026#34;: \u0026#34;1.0.0.0\u0026#34;,\r\u0026#34;parameters\u0026#34;: {\r\u0026#34;appName\u0026#34;: {\r\u0026#34;value\u0026#34;: \u0026#34;#{AzureFunctionName}\u0026#34;\r}\r}\r}\rBuild In TC Create a new project, add a new Build Configuration with 3 Build Steps.\nParameters These are use in TC in scripts, variable names, \u0026hellip;\n apikey (generated in OD) packageId (tc-od) server (url to OD) version (semantic version nr like 1.0.%build.number%)  publish This runner type is .NET CLI (dotnet). Give a Step name. Choose publish as Command. Select the project. Set Configuration and Output directory to bin\\Release\\PublishOutput pack This runner type is Command Line. Give a Step name. Choose Custom script and enter script below.\ncd tc-od\\bin\\Release\\PublishOutput\rC:\\Programs\\Octo\\octopack --id=%packageId% --format=zip --outFolder=../dist --version=%version%\r push This runner type is Command Line. Give a Step name. Choose Custom script and enter script below.\nThis pushed the zip file to OD.\ncd tc-od\\bin\\Release\\dist\rC:\\Programs\\Octo\\octopush --server=%server% --apiKey=%apikey% --package=%packageId%.%version%.zip\r Deploy In OD make sure you have setup\n an Environment a Deployment target(in our case a Azure Web App) a Lifecycle with automatic deploy after release creation an Azure Subscription (this is needed to deploy)  Add a project.\nUnder Process add 2 steps:\n Deploy Resources Deploy Function  Deploy Resources In this step we deploy the ARM template.\nSearch for resource Group and select Deploy an Azure resource Group.\n Set Step Name Select Execution Plan Select an Azure Account and Resource Group Select File inside a package Select Package Set Paths  Deploy Function In this step we deploy the Function.\nSearch for azure web and select Deploy an Azure Web App.\n Set Step Name Select Package  This is it. Happy coding!\nResources  https://octopus.com/blog/azure-functions  ","date":1529661600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651227972,"objectID":"b175cbb0c2581f30cd881e48283cbe33","permalink":"/post/createbuildazfvstcod/","publishdate":"2018-06-22T10:00:00Z","relpermalink":"/post/createbuildazfvstcod/","section":"post","summary":"Create, build and deploy Azure Functions with Visual Studio, Teamcity and Octopus Deploy","tags":["Azure Function","Visual Studio","Teamcity","Octopus Deploy","Azure"],"title":"Create, build and deploy Azure Functions with Visual Studio, Teamcity and Octopus Deploy","type":"post"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575544489,"objectID":"6d99026b9e19e4fa43d5aadf147c7176","permalink":"/contact/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/contact/","section":"","summary":"","tags":null,"title":"","type":"widget_page"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575544489,"objectID":"fd36605688ef45e10dc233c860158012","permalink":"/cv/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/cv/","section":"","summary":"","tags":null,"title":"","type":"widget_page"}]