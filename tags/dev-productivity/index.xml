<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dev Productivity on Sujith Quintelier</title><link>https://quintelier.dev/tags/dev-productivity/</link><description>Recent content in Dev Productivity on Sujith Quintelier</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 11 Aug 2025 06:00:00 +0000</lastBuildDate><atom:link href="https://quintelier.dev/tags/dev-productivity/index.xml" rel="self" type="application/rss+xml"/><item><title>Auto-triage CI failures with Copilot</title><link>https://quintelier.dev/posts/2025/08/ai-triage-github-actions-with-copilot/</link><pubDate>Mon, 11 Aug 2025 06:00:00 +0000</pubDate><guid>https://quintelier.dev/posts/2025/08/ai-triage-github-actions-with-copilot/</guid><description>&lt;p>Failures happen: the key is shortening time-to-understanding. In this guide, youâ€™ll automate triage when a GitHub Actions workflow fails: pull logs and artifacts, get an AI summary from GitHub Models, open an issue with concrete next steps, and optionally assign it to the Copilot coding agent.&lt;/p>
&lt;h2 id="what-youll-build">What youâ€™ll build&lt;/h2>
&lt;ul>
&lt;li>Trigger on failed workflow runs you care about&lt;/li>
&lt;li>Collect logs and artifacts for context&lt;/li>
&lt;li>Call GitHub Models for a concise summary and probable fix&lt;/li>
&lt;li>File a GitHub issue with reproduction hints and links&lt;/li>
&lt;li>Optionally assign the issue to the Copilot coding agent&lt;/li>
&lt;/ul>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;ul>
&lt;li>GitHub Actions enabled in your repo&lt;/li>
&lt;li>GitHub Models access and a token for inference:
&lt;ul>
&lt;li>If youâ€™re using a fine-grained PAT: add &lt;code>models:read&lt;/code> scope&lt;/li>
&lt;li>Or use &lt;code>secrets.GITHUB_TOKEN&lt;/code> in public repos where Models are enabled for the org&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Optional: Copilot coding agent enabled at the org or user level to assign issues to&lt;/li>
&lt;/ul>
&lt;h2 id="workflow-ai-assisted-failure-triage">Workflow: AI-assisted failure triage&lt;/h2>
&lt;p>Below is a complete workflow you can drop into &lt;code>.github/workflows/ai-triage.yml&lt;/code>. It triggers when selected workflows complete and only proceeds if they failed.&lt;/p></description></item><item><title>ðŸ¤– GitHub Copilot Agent: Your AI Pair Programmer</title><link>https://quintelier.dev/posts/2025/04/github-copilot-agent-mode/</link><pubDate>Thu, 10 Apr 2025 06:00:00 +0000</pubDate><guid>https://quintelier.dev/posts/2025/04/github-copilot-agent-mode/</guid><description>&lt;p>GitHub Copilot just levelled up. The long-anticipated &lt;strong>Agent Mode&lt;/strong> is no longer in preview and is officially rolling out to all users of &lt;strong>Visual Studio Code&lt;/strong>, including the stable release. If you&amp;rsquo;ve ever dreamed of having a truly &lt;strong>autonomous AI pair programmer&lt;/strong> that doesn&amp;rsquo;t just suggest lines of code but actively edits files, runs commands, and debugs your code â€” your wish has come true.&lt;/p>
&lt;h2 id="-what-is-copilot-agent-mode">ðŸ’¡ What is Copilot Agent Mode?&lt;/h2>
&lt;p>Agent Mode is a major upgrade to GitHub Copilot. Unlike traditional autocomplete and inline suggestions, &lt;strong>Agent Mode enables Copilot to understand your workspace and perform complex, multi-step tasks&lt;/strong> â€” from generating code to fixing bugs, running tests, editing multiple files, and executing terminal commands.&lt;/p></description></item></channel></rss>